# This is the biome config file of the Soulsand Island Border biome, which is a custom biome.

#######################################################################
# +-----------------------------------------------------------------+ #
# |                        Biome Inheritance                        | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This should be the value of the biomeConfig you wish to extend.
# The extended config will be loaded, at which point the configs included below
# will overwrite any configs loaded from the extended config.
BiomeExtends: Hell

# When set to true, all resources of the parent biome (if any) will be copied
# to the resources queue of this biome. If a resource in the parent biome looks
# very similar to that of a child biome (for example, two ores of the same type)
# it won't be copied.
ResourceInheritance: true

#######################################################################
# +-----------------------------------------------------------------+ #
# |                         Biome placement                         | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Biome size from 0 to GenerationDepth. Defines in which biome layer this biome will be generated (see GenerationDepth).
# Higher numbers give a smaller biome, lower numbers a larger biome.
# Oceans and rivers are generated using a dirrerent algorithm in the default settings,
# (they aren't in one of the biome lists), so this setting won't affect them.
BiomeSize: 10

# Biome rarity from 100 to 1. If this is normal or ice biome - chance for spawn this biome then others.
# Example for normal biome :
#   100 rarity mean 1/6 chance than other ( with 6 default normal biomes).
#   50 rarity mean 1/11 chance than other
# For isle biome this is chance to spawn isle in good place.
# Don`t work on Ocean and River (frozen versions too) biomes until not added as normal biome.
BiomeRarity: 100

# The hexadecimal color value of this biome. Used in the output of the /tc map command,
# and used in the input of BiomeMode:FromImage.
BiomeColor: #cb4242

# Replace this biome to specified after the terrain is generated.
# This will make the world files contain the id of the specified biome, instead of the id of this biome.
# This will cause saplings, colors and mob spawning work as in specified biome.
ReplaceToBiomeName: Hell

######################
# Border biomes only #
######################

# Biome name list where this biome will be border.Like Mushroom isle shore. Use is compared as IsleInBiome
BiomeIsBorder: LavaOceanIsland

# Biome name list near border is not applied. 
NotBorderNear: 


#######################################################################
# +-----------------------------------------------------------------+ #
# |                  Terrain height and volatility                  | #
# +-----------------------------------------------------------------+ #
#######################################################################

# BiomeHeight mean how much height will be added in terrain generation
# It is double value from -10.0 to 10.0
# Value 0.0 equivalent half of map height with all other default settings
BiomeHeight: 0.9

# Biome volatility.
BiomeVolatility: 0.2

# Smooth radius between biomes. Must be between 0 and 32, inclusive. The resulting
# smooth radius seems to be  (thisSmoothRadius + 1 + smoothRadiusOfBiomeOnOtherSide) * 4 .
# So if two biomes next to each other have both a smooth radius of 2, the
# resulting smooth area will be (2 + 1 + 2) * 4 = 20 blocks wide.
SmoothRadius: 3

# If this value is greater than 0, then it will affect how much, on average, the terrain will rise before leveling off when it begins to increase in elevation.
# If the value is less than 0, then it will cause the terrain to either increase to a lower height before leveling out or decrease in height if the value is a large enough negative.
MaxAverageHeight: 0.0

# If this value is greater than 0, then it will affect how much, on average, the terrain (usually at the ottom of the ocean) will fall before leveling off when it begins to decrease in elevation. 
# If the value is less than 0, then it will cause the terrain to either fall to a lesser depth before leveling out or increase in height if the value is a large enough negative.
MaxAverageDepth: 0.0

# Another type of noise. This noise is independent from biomes. The larger the values the more chaotic/volatile landscape generation becomes.
# Setting the values to negative will have the opposite effect and make landscape generation calmer/gentler.
Volatility1: 0.0

Volatility2: 0.0

# Adjust the weight of the corresponding volatility settings. This allows you to change how prevalent you want either of the volatility settings to be in the terrain.
VolatilityWeight1: 0.5

VolatilityWeight2: 0.45

# Disable all noises except Volatility1 and Volatility2. Also disable default block chance from height.
DisableBiomeHeight: true

# List of custom height factor, 17 double entries, each entire control of about 7 blocks height from down. Positive entry - better chance of spawn blocks, negative - smaller
# Values which affect your configuration may be found only experimental. That may be very big, like ~3000.0 depends from height
# Example:
#   CustomHeightControl:0.0,-2500.0,0.0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
# Make empty layer above bedrock layer. 
CustomHeightControl: 500.0, 500.0, 100.0, -75.0, -250.0, -100.0, -50.0, 0.0, 250.0, 500.0, 750.0, 1000.0, 1250.0, 1500.0, 15000.0, -1000.0, -1000.0, -1000.0, -1000.0, -1000.0, -1000.0, -1000.0, -1000.0, -1000.0, 15000.0, -150000.0, -150000.0, -150000.0, -150000.0, -150000.0

#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Resource queue                         | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This section control all resources spawning after terrain generation.
# The resources will be placed in this order.

# Keep in mind that a high size, frequency or rarity might slow down terrain generation.

# Possible resources:
# DoResourceInheritance(true|false)
# SmallLake(BlockName,Frequency,Rarity,MinAltitude,MaxAltitude)
# Dungeon(Frequency,Rarity,MinAltitude,MaxAltitude)
# UnderGroundLake(MinSize,MaxSize,Frequency,Rarity,MinAltitude,MaxAltitude)
# Ore(BlockName,Size,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# UnderWaterOre(BlockName,Size,Frequency,Rarity,BlockSource[,BlockSource2,BlockSource3.....])
# CustomObject(Object[,AnotherObject[,...]])
# CustomStructure([Object,Object_Chance[,AnotherObject,Object_Chance[,...]]])
# Tree(Frequency,TreeType,TreeTypeChance[,AdditionalTreeType,AdditionalTreeTypeChance.....])
# Plant(PlantType,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# Grass(PlantType,Grouped/NotGrouped,Frequency,Rarity,BlockSource[,BlockSource2,BlockSource3.....])
# Reed(BlockName,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# Cactus(BlockName,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# Liquid(BlockName,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# AboveWaterRes(BlockName,Frequency,Rarity)
# Vines(Frequency,Rarity,MinAltitude,MaxAltitude)
# Vein(BlockName,MinRadius,MaxRadius,Rarity,OreSize,OreFrequency,OreRarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,..])
# Well(BaseBlockName,HalfSlabBlockName,WaterBlockName,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,..])
# Boulder(BlockName,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,..]
# IceSpike(BlockName,IceSpikeType,Frequency,Rarity,MinAltitude,MaxAltitude,Blocksource[,BlockSource2,...])

# BlockName:      must be the name of a block. May include block data, like "WOOL:1".
# BlockSource:    list of blocks the resource can spawn on/in. You can also use "Solid" or "All".
# Frequency:      number of attempts to place this resource in each chunk.
# Rarity:         chance for each attempt, Rarity:100 - mean 100% to pass, Rarity:1 - mean 1% to pass.
# MinAltitude and MaxAltitude: height limits.
# BlockSource:    mean where or whereupon resource will be placed 
# TreeType:       Tree (original oak tree) - BigTree - Birch - TallBirch - SwampTree
#                 HugeMushroom (not a tree but still counts) - Taiga1 - Taiga2 - HugeTaiga1 - HugeTaiga2
#                 JungleTree (the huge jungle tree) - GroundBush - CocoaTree (smaller jungle tree)
#                 DarkOak (from the roofed forest biome) - Acacia
#                 You can also use your own custom objects, as long as they have set Tree to true in their settings.
# TreeTypeChance: similar to Rarity. Example:
#                 Tree(10,Taiga1,35,Taiga2,100) - plugin tries 10 times, for each attempt it tries to place Taiga1 (35% chance),
#                 if that fails, it attempts to place Taiga2 (100% chance).
# PlantType:      one of the plant types: Allium, AzureBluet, BlueOrchid, BrownMushroom, Dandelion, DeadBush, DoubleTallgrass, Fern, LargeFern, Lilac, OrangeTulip, OxeyeDaisy, Peony, PinkTulip, Poppy, RedMushroom, RedTulip, RoseBush, Sunflower, Tallgrass, WhiteTulip
#                 or simply a BlockName
# IceSpikeType:   one of the ice spike types: Basement,SmallSpike,HugeSpike
# Object:         can be a any kind of custom object (bo2 or bo3) but without the file extension. You can
#                 also use UseWorld to spawn one of the object in the WorldObjects folder and UseBiome to spawn
#                 one of the objects in the BiomeObjects setting. When using BO2s for UseWorld, the BO2 must have
#                 this biome in their spawnInBiome setting.

# Plant and Grass resource: both a resource of one block. Plant can place blocks underground, Grass cannot.
# Liquid resource: a one-block water or lava source
# SmallLake and UnderGroundLake resources: small lakes of about 8x8 blocks
# Vein resource: not in vanilla. Starts an area where ores will spawn. Can be slow, so use a low Rarity (smaller than 1).
# CustomStructure resource: starts a BO3 structure in the chunk.

Ore(SOUL_SAND,5,60,70,20,20,NETHERRACK)
Ore(SOUL_SAND,5,60,70,21,21,NETHERRACK)
Ore(SOUL_SAND,5,60,70,22,22,NETHERRACK)
Ore(SOUL_SAND,5,60,70,23,23,NETHERRACK)
Ore(STONE:1,7,60,100,20,20,NETHERRACK)
Ore(STONE:1,7,60,100,21,21,NETHERRACK)
Plant(FIRE,1,100.0,20,24,NETHERRACK)